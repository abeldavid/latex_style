import shutil

mainfile = 'template'

fig = 0

shutil.copy2('mavlab.sty','export/')

def latex_tag(string, tag):
    t = '\\' + tag + '['
    if t in string:
        # we have an argument
        t = '\\' + tag + '['
        a = string.split(t,1)
        pre = a[0]
        b = a[1].split(']{',1)
        arg = b[0]
        c = b[1].split('}',1)
        tag = c[0]
        post = c[1]
    else:
        t = '\\' + tag + '{'
        a = string.split(t,1)
        pre = a[0]
        b = a[1].split('}',1)
        arg = ''
        tag = b[0]
        post = b[1]
    return pre.strip(), arg.strip(), tag.strip(), post.strip()
    


def process(out, file):
    global fig
    print('Processing:', file)
    with open(file, 'r') as main:
        data = main.readlines()

        for line in data:
            if '\\begin{figure}' in line:
                fig = fig + 1
                print(' - Figure',fig)
            
            if '\\input{' in line:
                out.write( '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n' )
                out.write( '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n' )
                out.write( '%' + line )
                out.write( '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n' )
                out.write( '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n' )
                out.write( '\n' )
                pre, arg, newfile, cmt = latex_tag(line,'input')
                #print(pre,arg,newfile,cmt)
                process( out, newfile + '.tex' )
            elif '\\bibliography{' in line:
                process(out, mainfile + '.bbl')
                
            else:
                # skip
                if '\\newcommand' in line:
                    continue
                if '\\bibliographystyle' in line:
                    continue

                # replace
                # line = line.replace('\\includematlab{','\\includegraphics[scale=0.8]{')

                # graphics: rename, copy and include
                if '\\includegraphics' in line:
                    pre, arg, newfile, cmt = latex_tag(line,'includegraphics')
                    #print("1)",pre,"2)",arg,"3)",newfile,"4)",cmt)
                    if not ('pdf' in newfile):
                        out.write(pre+'\\includegraphics['+arg+']{fig'+str(fig)+'}'+cmt+'\n')
                        print('   - Copy',newfile+'.eps','export/fig'+str(fig)+'.eps')
                        try:
                            shutil.copy2(newfile+'.eps','export/fig'+str(fig)+'.eps')
                        except:
                            print('!!!! Error !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')
                    else:
                        print("    - Skipping",newfile)
                        #out.write(line)
                else:
                    out.write( line )



with open("export/mergedpaper.tex", "w") as jfr:
    jfr.write("% Autogenerated\n")

    process(jfr, mainfile + '.tex')
